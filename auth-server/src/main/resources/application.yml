server:
  port: 8300

spring:
  application:
    name: auth-server
  session:
    store-type: redis
  redis:
    host: localhost
    port: 6379
    flush-mode: on_save # 호출될 떄만 redis에 기록
    namespace: spring:session # key값에 대한 prefix
  server:
    servlet:
      session:
        timeout: 5m

eureka:
#  instance:
#    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}} # random port 지정 시 서비스 구분하기 위해 각각의 서비스에 instance-id로 구분하는 방법
  client:
    register-with-eureka: true      # eureka 서비스 등록 여부
    fetch-registry: true            #
    registryFetchIntervalSeconds: 15 # eureka에게 서비스 정보를 가져오는 주기 
    disable-delta: true             # eureka에게 서비스 정보를 가져올때 변경된 내용만 가져온다. (false로 하면 전체를 가져오기에 대역폭 낭비이다.)
    service-url:
      defaultZone: http://admin:admin123@localhost:9010/eureka